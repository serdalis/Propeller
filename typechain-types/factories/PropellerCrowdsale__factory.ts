/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PropellerCrowdsale,
  PropellerCrowdsaleInterface,
} from "../PropellerCrowdsale";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_wallet",
        type: "address",
      },
      {
        internalType: "contract Propeller",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_openingTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_closingTime",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "prevClosingTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newClosingTime",
        type: "uint256",
      },
    ],
    name: "TimedCrowdsaleExtended",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "purchaser",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensPurchased",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "buyTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "closingTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasClosed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOpen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "openingTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sendLeftoversToPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wallet",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weiRaised",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610cdf380380610cdf83398101604081905261002f9161024c565b600160005581818686868261008b5760405162461bcd60e51b815260206004820152601460248201527f43726f776473616c653a2072617465206973203000000000000000000000000060448201526064015b60405180910390fd5b6001600160a01b0382166100e15760405162461bcd60e51b815260206004820152601960248201527f43726f776473616c653a2077616c6c6574206973207a65726f000000000000006044820152606401610082565b6001600160a01b0381166101375760405162461bcd60e51b815260206004820152601860248201527f43726f776473616c653a20746f6b656e206973207a65726f00000000000000006044820152606401610082565b600392909255600280546001600160a01b039283166001600160a01b03199182161790915560018054929093169116179055428210156101c35760405162461bcd60e51b815260206004820152602160248201527f43726f776473616c653a206f70656e696e67206265666f72652063757272656e6044820152601d60fa1b6064820152608401610082565b8181116102205760405162461bcd60e51b815260206004820152602560248201527f43726f776473616c653a206f70656e696e67206e6f74206265666f726520636c6044820152646f73696e6760d81b6064820152608401610082565b600591909155600655506102a09350505050565b6001600160a01b038116811461024957600080fd5b50565b600080600080600060a0868803121561026457600080fd5b85519450602086015161027681610234565b604087015190945061028781610234565b6060870151608090970151959894975095949392505050565b610a30806102af6000396000f3fe6080604052600436106100b55760003560e01c8063521eb27311610069578063b7a8807c1161004e578063b7a8807c146101a0578063ec8ac4d8146101b5578063fc0c546a146101c3576100ca565b8063521eb27314610159578063ae1f9f261461018b576100ca565b80634042b66f1161009a5780634042b66f1461011a57806347535d7b1461012f5780634b6753bc14610144576100ca565b80631515bc2b146100d35780632c4e722e146100fb576100ca565b366100ca576100c8336101e1565b6101e1565b005b6100c8336101e1565b3480156100df57600080fd5b5060065442115b60405190151581526020015b60405180910390f35b34801561010757600080fd5b506003545b6040519081526020016100f2565b34801561012657600080fd5b5060045461010c565b34801561013b57600080fd5b506100e66102c9565b34801561015057600080fd5b5060065461010c565b34801561016557600080fd5b506002546001600160a01b03165b6040516001600160a01b0390911681526020016100f2565b34801561019757600080fd5b506100c86102e4565b3480156101ac57600080fd5b5060055461010c565b6100c86100c33660046108b1565b3480156101cf57600080fd5b506001546001600160a01b0316610173565b600260005414156102395760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b6002600055346102498282610365565b600061025482610373565b6004549091506102649083610390565b60045561027183826103a3565b60408051838152602081018390526001600160a01b0385169133917f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b910160405180910390a36102bf6103ad565b5050600160005550565b600060055442101580156102df57506006544211155b905090565b600654421161035b5760405162461bcd60e51b815260206004820152602560248201527f43726f776473616c653a2043616e27742073656e64206265666f72652073616c60448201527f6520656e640000000000000000000000000000000000000000000000000000006064820152608401610230565b6103636103e9565b565b61036f828261048a565b5050565b600061038a600354836104e890919063ffffffff16565b92915050565b600061039c8284610909565b9392505050565b61036f82826104f4565b6002546040516001600160a01b03909116903480156108fc02916000818181858888f193505050501580156103e6573d6000803e3d6000fd5b50565b6002546001546040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152610363926001600160a01b039081169216906370a0823190602401602060405180830381865afa158015610453573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104779190610921565b6001546001600160a01b031691906104fe565b6104926102c9565b6104de5760405162461bcd60e51b815260206004820152601360248201527f43726f776473616c653a206e6f74206f70656e000000000000000000000000006044820152606401610230565b61036f8282610583565b600061039c828461093a565b61036f8282610626565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905261057e90849061063d565b505050565b6001600160a01b0382166105d95760405162461bcd60e51b815260206004820152601e60248201527f43726f776473616c653a2062656e6566696369617279206973207a65726f00006044820152606401610230565b8061036f5760405162461bcd60e51b815260206004820152601960248201527f43726f776473616c653a20776569416d6f756e742069732030000000000000006044820152606401610230565b60015461036f906001600160a01b031683836104fe565b6000610692826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166107229092919063ffffffff16565b80519091501561057e57808060200190518101906106b09190610959565b61057e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610230565b60606107318484600085610739565b949350505050565b6060824710156107b15760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610230565b843b6107ff5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610230565b600080866001600160a01b0316858760405161081b91906109ab565b60006040518083038185875af1925050503d8060008114610858576040519150601f19603f3d011682016040523d82523d6000602084013e61085d565b606091505b509150915061086d828286610878565b979650505050505050565b6060831561088757508161039c565b8251156108975782518084602001fd5b8160405162461bcd60e51b815260040161023091906109c7565b6000602082840312156108c357600080fd5b81356001600160a01b038116811461039c57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000821982111561091c5761091c6108da565b500190565b60006020828403121561093357600080fd5b5051919050565b6000816000190483118215151615610954576109546108da565b500290565b60006020828403121561096b57600080fd5b8151801515811461039c57600080fd5b60005b8381101561099657818101518382015260200161097e565b838111156109a5576000848401525b50505050565b600082516109bd81846020870161097b565b9190910192915050565b60208152600082518060208401526109e681604085016020870161097b565b601f01601f1916919091016040019291505056fea2646970667358221220a3506fd42d5f9ae49f19f257b9705327d15e4a605357eba762bfc5c12ece23ef64736f6c634300080a0033";

type PropellerCrowdsaleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PropellerCrowdsaleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PropellerCrowdsale__factory extends ContractFactory {
  constructor(...args: PropellerCrowdsaleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _rate: BigNumberish,
    _wallet: string,
    _token: string,
    _openingTime: BigNumberish,
    _closingTime: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PropellerCrowdsale> {
    return super.deploy(
      _rate,
      _wallet,
      _token,
      _openingTime,
      _closingTime,
      overrides || {}
    ) as Promise<PropellerCrowdsale>;
  }
  getDeployTransaction(
    _rate: BigNumberish,
    _wallet: string,
    _token: string,
    _openingTime: BigNumberish,
    _closingTime: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rate,
      _wallet,
      _token,
      _openingTime,
      _closingTime,
      overrides || {}
    );
  }
  attach(address: string): PropellerCrowdsale {
    return super.attach(address) as PropellerCrowdsale;
  }
  connect(signer: Signer): PropellerCrowdsale__factory {
    return super.connect(signer) as PropellerCrowdsale__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PropellerCrowdsaleInterface {
    return new utils.Interface(_abi) as PropellerCrowdsaleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PropellerCrowdsale {
    return new Contract(address, _abi, signerOrProvider) as PropellerCrowdsale;
  }
}
